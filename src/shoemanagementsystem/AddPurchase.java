/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoemanagementsystem;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.font.TextAttribute;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author mnawa
 */
public class AddPurchase extends javax.swing.JFrame {

    Connection conn;
    PreparedStatement st;
    ResultSet rs;

    ColorSizeFrame f;

    public AddPurchase() {
        initComponents();

        productsTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        productsTable.getTableHeader().setOpaque(false);
        productsTable.getTableHeader().setBackground(new Color(187, 134, 252));
        productsTable.getTableHeader().setForeground(new Color(255, 255, 255));
        productsTable.setRowHeight(25);

        conn = DBConnection.getConnection();
        getID();
        getSuppliers();

//        brandCb.setEnabled(false);
        getAllProducts();
        getTotal();

        Font font = colorSize.getFont();
        Map attrib = font.getAttributes();
        attrib.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        colorSize.setFont(font.deriveFont(attrib));

        codeTf.grabFocus();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        idTf = new javax.swing.JTextField();
        codeTf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        categoryCb = new javax.swing.JComboBox<>();
        supplierCb = new javax.swing.JComboBox<>();
        nameTf = new javax.swing.JTextField();
        typeCb = new javax.swing.JComboBox<>();
        brandCb = new javax.swing.JComboBox<>();
        quantityTf = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        priceTf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        totalTf = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        colorSize = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(12, 12, 12));

        jPanel2.setBackground(new java.awt.Color(29, 29, 29));

        jPanel4.setBackground(new java.awt.Color(29, 29, 29));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Product", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.white));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID");

        idTf.setEditable(false);
        idTf.setBackground(new java.awt.Color(29, 29, 29));
        idTf.setForeground(new java.awt.Color(255, 255, 255));
        idTf.setCaretColor(new java.awt.Color(255, 255, 255));

        codeTf.setBackground(new java.awt.Color(29, 29, 29));
        codeTf.setForeground(new java.awt.Color(255, 255, 255));
        codeTf.setCaretColor(new java.awt.Color(255, 255, 255));
        codeTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codeTfKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Product Code");

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Product Name");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Category");

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Type");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Company");

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Brand");

        addBtn.setBackground(new java.awt.Color(187, 134, 252));
        addBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        categoryCb.setBackground(new java.awt.Color(29, 29, 29));
        categoryCb.setForeground(new java.awt.Color(255, 255, 255));
        categoryCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Men", "Women" }));
        categoryCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryCbActionPerformed(evt);
            }
        });

        supplierCb.setBackground(new java.awt.Color(29, 29, 29));
        supplierCb.setForeground(new java.awt.Color(255, 255, 255));
        supplierCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Supplier Company" }));
        supplierCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierCbActionPerformed(evt);
            }
        });

        nameTf.setBackground(new java.awt.Color(29, 29, 29));
        nameTf.setForeground(new java.awt.Color(255, 255, 255));
        nameTf.setCaretColor(new java.awt.Color(255, 255, 255));
        nameTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTfKeyPressed(evt);
            }
        });

        typeCb.setBackground(new java.awt.Color(29, 29, 29));
        typeCb.setForeground(new java.awt.Color(255, 255, 255));
        typeCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a type" }));

        brandCb.setBackground(new java.awt.Color(29, 29, 29));
        brandCb.setForeground(new java.awt.Color(255, 255, 255));

        quantityTf.setBackground(new java.awt.Color(29, 29, 29));
        quantityTf.setForeground(new java.awt.Color(255, 255, 255));
        quantityTf.setCaretColor(new java.awt.Color(255, 255, 255));
        quantityTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTfActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Quantity");

        priceTf.setBackground(new java.awt.Color(29, 29, 29));
        priceTf.setForeground(new java.awt.Color(255, 255, 255));
        priceTf.setCaretColor(new java.awt.Color(255, 255, 255));
        priceTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTfActionPerformed(evt);
            }
        });
        priceTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                priceTfFocusGained(evt);
            }
        });
        priceTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTfKeyPressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Unit Price");

        totalTf.setBackground(new java.awt.Color(29, 29, 29));
        totalTf.setForeground(new java.awt.Color(255, 255, 255));
        totalTf.setCaretColor(new java.awt.Color(255, 255, 255));
        totalTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalTfActionPerformed(evt);
            }
        });
        totalTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                totalTfFocusGained(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Total");

        colorSize.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        colorSize.setForeground(new java.awt.Color(187, 134, 252));
        colorSize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        colorSize.setText("Select color and size");
        colorSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colorSizeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190)
                        .addComponent(colorSize, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(55, 55, 55)
                                .addComponent(idTf))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(categoryCb, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel13))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalTf)
                                    .addComponent(brandCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quantityTf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(typeCb, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(codeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(supplierCb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(priceTf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idTf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(codeTf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(nameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(categoryCb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplierCb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeCb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(brandCb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(quantityTf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(priceTf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(totalTf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colorSize, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane1.setBorder(null);

        productsTable.setBackground(new java.awt.Color(20, 20, 20));
        productsTable.setForeground(new java.awt.Color(255, 255, 255));
        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Product code", "Product Name", "Category", "Type", "Supplier Name", "Brand", "Quantity", "Price", "Total Price"
            }
        ));
        productsTable.setFocusable(false);
        productsTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        productsTable.setRequestFocusEnabled(false);
        productsTable.setRowHeight(26);
        productsTable.setSelectionBackground(new java.awt.Color(153, 153, 153));
        productsTable.setShowVerticalLines(false);
        productsTable.getTableHeader().setReorderingAllowed(false);
        productsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productsTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(29, 29, 29));
        jPanel3.setForeground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add product");

        jButton8.setBackground(new java.awt.Color(29, 29, 29));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demeImages/icons8_left_25px.png"))); // NOI18N
        jButton8.setBorderPainted(false);
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton8)
                .addGap(370, 370, 370)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.dispose();
        new PurchaseForm().setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed
    int id;
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        AddProduct();
    }//GEN-LAST:event_addBtnActionPerformed

    private void quantityTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTfActionPerformed

    private void priceTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTfActionPerformed


    private void productsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productsTableMouseClicked
        ProductDetailFrame f = new ProductDetailFrame();
        f.setVisible(true);
        f.setLocationRelativeTo(this);

        int row = productsTable.getSelectedRow();
        TableModel model = (DefaultTableModel) productsTable.getModel();
        String code = model.getValueAt(row, 1).toString();
        String category = model.getValueAt(row, 3).toString();

        if (category.equals("Men")) {
            f.pDetailTable.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Color", "40", "41", "42", "43", "44", "45", "46"
                    }
            ));
            f.men = true;
            f.code = code;
            f.setColorAndSize();
        } else if (category.equals("Women")) {
            f.pDetailTable.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Color", "36", "37", "38", "39", "40", "41", "42"
                    }
            ));
            f.women = true;
            f.code = code;
            f.setColorAndSize();

        }


    }//GEN-LAST:event_productsTableMouseClicked

    private void totalTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalTfActionPerformed
    int count = 1;
    private void supplierCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierCbActionPerformed
        brandCb.setEnabled(true);

        setBrands();
    }//GEN-LAST:event_supplierCbActionPerformed
    int total;
    private void priceTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTfKeyPressed

    }//GEN-LAST:event_priceTfKeyPressed

    private void totalTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_totalTfFocusGained

    }//GEN-LAST:event_totalTfFocusGained

    private void categoryCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryCbActionPerformed
        setType();
    }//GEN-LAST:event_categoryCbActionPerformed
    String code;
    private void colorSizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorSizeMouseClicked

        f = new ColorSizeFrame();
        if (categoryCb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select a category first", "invalid", JOptionPane.ERROR_MESSAGE);
        } else if (categoryCb.getSelectedIndex() == 1) {
            f.setVisible(true);
            f.setMen();
            f.disableAll();
            code = codeTf.getText();
            userdetails.prodcutCode(code);
        } else if (categoryCb.getSelectedIndex() == 2) {
            f.setVisible(true);
            f.setWomen();
            f.disableAll();
            code = codeTf.getText();
            userdetails.prodcutCode(code);

        }
    }//GEN-LAST:event_colorSizeMouseClicked

    private void priceTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceTfFocusGained

    }//GEN-LAST:event_priceTfFocusGained

    private void codeTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeTfKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (codeTf.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Enter product code", "Empty", JOptionPane.WARNING_MESSAGE);
            } else {
                nameTf.grabFocus();
            }

        }
    }//GEN-LAST:event_codeTfKeyPressed

    private void nameTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTfKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (nameTf.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Enter product name", "Empty", JOptionPane.WARNING_MESSAGE);

            } else {
                categoryCb.grabFocus();
            }

        }
    }//GEN-LAST:event_nameTfKeyPressed

    void getTotal() {
        priceTf.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                total = Integer.valueOf(quantityTf.getText()) * Integer.valueOf(priceTf.getText());
                totalTf.setText(total + "");
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                total = Integer.valueOf(quantityTf.getText()) * Integer.valueOf(priceTf.getText());
                totalTf.setText(total + "");

            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });

    }

    void AddProduct() {
        if (codeTf.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter product code", "Empty", JOptionPane.WARNING_MESSAGE);
        } else if (nameTf.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter product name", "Empty", JOptionPane.WARNING_MESSAGE);

        } else if (categoryCb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select a category first", "Empty", JOptionPane.WARNING_MESSAGE);

        } //        else if (typeCb.getSelectedIndex() == 0) {
        //            JOptionPane.showMessageDialog(this, "Select a type", "Empty", JOptionPane.WARNING_MESSAGE);
        //
        //        }
        else if (supplierCb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select a supplier", "Empty", JOptionPane.WARNING_MESSAGE);

        } //        else if (brandCb.getSelectedIndex() == 0) {
        //            JOptionPane.showMessageDialog(this, "Select a brand", "Empty", JOptionPane.WARNING_MESSAGE);
        //
        //        }
        else if (quantityTf.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Product Quantity", "Empty", JOptionPane.WARNING_MESSAGE);

        } else if (priceTf.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Unit price", "Empty", JOptionPane.WARNING_MESSAGE);

        } else {

            try {

                if (categoryCb.getSelectedIndex() == 1) {

                    st = conn.prepareStatement("select * from colorsizemen where p_code=?");
                    st.setString(1, codeTf.getText());

                    rs = st.executeQuery();
                    if (!rs.next()) {
                        JOptionPane.showMessageDialog(this, "Select Color and size for the product", "Eror", JOptionPane.ERROR_MESSAGE);
                    } else {
                        st = conn.prepareStatement("insert into stock values(?,?,?,?,?,?,?,?,?,?,curdate(),curtime())");

                        st.setInt(1, Integer.valueOf(idTf.getText()));
                        st.setString(2, codeTf.getText());
                        st.setString(3, nameTf.getText());
                        st.setString(4, categoryCb.getSelectedItem().toString());
                        st.setString(5, typeCb.getSelectedItem().toString());
                        st.setString(6, supplierCb.getSelectedItem().toString());
                        st.setString(7, brandCb.getSelectedItem().toString());

                        st.setInt(8, Integer.valueOf(quantityTf.getText()));
                        st.setInt(9, Integer.valueOf(priceTf.getText()));
                        st.setInt(10, Integer.valueOf(totalTf.getText()));

                        st.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data inserted successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                        Refresh();
                        productsTable.setRowSelectionInterval(id - 1, id - 1);
                        productsTable.scrollRectToVisible(productsTable.getCellRect(id - 1, 0, true));

                        getID();
                    }
                } else if (categoryCb.getSelectedIndex() == 2) {

                    st = conn.prepareStatement("select * from colorsizewomen where p_code=?");
                    st.setString(1, codeTf.getText());
                    rs = st.executeQuery();

                    if (!rs.next()) {
                        JOptionPane.showMessageDialog(this, "Select Color and size for the product", "Eror", JOptionPane.ERROR_MESSAGE);
                    } else {
                        st = conn.prepareStatement("insert into stock values(?,?,?,?,?,?,?,?,?,?,curdate(),curtime())");

                        st.setInt(1, Integer.valueOf(idTf.getText()));
                        st.setString(2, codeTf.getText());
                        st.setString(3, nameTf.getText());
                        st.setString(4, categoryCb.getSelectedItem().toString());
                        st.setString(5, typeCb.getSelectedItem().toString());
                        st.setString(6, supplierCb.getSelectedItem().toString());
                        st.setString(7, brandCb.getSelectedItem().toString());

                        st.setInt(8, Integer.valueOf(quantityTf.getText()));
                        st.setInt(9, Integer.valueOf(priceTf.getText()));
                        st.setInt(10, Integer.valueOf(totalTf.getText()));

                        st.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data inserted successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                        Refresh();
                        productsTable.setRowSelectionInterval(id - 1, id - 1);
                        productsTable.scrollRectToVisible(productsTable.getCellRect(id - 1, 0, true));

                        getID();
                    }
                }
//                else {
//                    st = conn.prepareStatement("insert into stock values(?,?,?,?,?,?,?,?,?,?,curdate(),curtime())");
//
//                    st.setInt(1, Integer.valueOf(idTf.getText()));
//                    st.setString(2, codeTf.getText());
//                    st.setString(3, nameTf.getText());
//                    st.setString(4, categoryCb.getSelectedItem().toString());
//                    st.setString(5, typeCb.getSelectedItem().toString());
//                    st.setString(6, supplierCb.getSelectedItem().toString());
//                    st.setString(7, brandCb.getSelectedItem().toString());
//
//                    st.setInt(8, Integer.valueOf(quantityTf.getText()));
//                    st.setInt(9, Integer.valueOf(priceTf.getText()));
//                    st.setInt(10, Integer.valueOf(totalTf.getText()));
//
//                    st.executeUpdate();
//                    JOptionPane.showMessageDialog(null, "Data inserted successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
//                    Refresh();
//                    productsTable.setRowSelectionInterval(id - 1, id - 1);
//                    productsTable.scrollRectToVisible(productsTable.getCellRect(id - 1, 0, true));
//
//                    getID();
//
//                }
            } catch (SQLException ex) {
                Logger.getLogger(AddPurchase.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    void setBrands() {
        try {
            if (count == 1) {

                st = conn.prepareStatement("select brand_name from brands where supplier_name=?");
                st.setString(1, supplierCb.getSelectedItem().toString());
                rs = st.executeQuery();

                while (rs.next()) {
                    brandCb.addItem(rs.getString(1));

                }

                count--;

            } else {
                brandCb.removeAllItems();
                count = 1;
                setBrands();

            }
        } catch (SQLException ex) {
            Logger.getLogger(AddPurchase.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    int type = 1;

    void setType() {
        try {
            if (type == 1) {
                if (categoryCb.getSelectedIndex() == 1) {
                    st = conn.prepareStatement("select name from shoe_types_men");

                    rs = st.executeQuery();

                    while (rs.next()) {
                        typeCb.addItem(rs.getString(1));

                    }
                } else if (categoryCb.getSelectedIndex() == 2) {
                    st = conn.prepareStatement("select name from shoe_types_women");

                    rs = st.executeQuery();

                    while (rs.next()) {
                        typeCb.addItem(rs.getString(1));

                    }
                }
                type--;

            } else {
                typeCb.removeAllItems();
                type = 1;
                setType();

            }
        } catch (SQLException ex) {
            Logger.getLogger(AddPurchase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void getSuppliers() {
        try {

            st = conn.prepareStatement("select name from supplier_contact_details");
            rs = st.executeQuery();

            while (rs.next()) {
                String name = rs.getString(1);
                supplierCb.addItem(name);

            }

        } catch (SQLException ex) {
            Logger.getLogger(AddBrand.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void getAllProducts() {
        try {
            st = conn.prepareStatement("select * from stock");
            rs = st.executeQuery();

            while (rs.next()) {
                int id = rs.getInt(1);
                String code = rs.getString(2);
                String name = rs.getString(3);
                String category = rs.getString(4);
                String type = rs.getString(5);
                String supplier = rs.getString(6);
                String brand = rs.getString(7);

                int quant = rs.getInt(8);
                int u_price = rs.getInt(9);
                int total = rs.getInt(10);

                Object[] obj = {id, code, name, category, type, supplier, brand, quant, u_price, total};
                DefaultTableModel tb = (DefaultTableModel) productsTable.getModel();
                tb.addRow(obj);

            }

        } catch (SQLException ex) {
            Logger.getLogger(PurchaseForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void Refresh() {
        DefaultTableModel tb = (DefaultTableModel) productsTable.getModel();
        tb.setRowCount(0);
        getAllProducts();
    }

    void getID() {

        try {
            st = conn.prepareStatement("select max(id) from stock");
            rs = st.executeQuery();
            if (rs.next()) {
                id = rs.getInt(1) + 1;
                idTf.setText(id + "");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Darcula".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPurchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddPurchase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox<String> brandCb;
    public javax.swing.JComboBox<String> categoryCb;
    private javax.swing.JTextField codeTf;
    private javax.swing.JLabel colorSize;
    private javax.swing.JTextField idTf;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTf;
    private javax.swing.JTextField priceTf;
    private javax.swing.JTable productsTable;
    private javax.swing.JTextField quantityTf;
    private javax.swing.JComboBox<String> supplierCb;
    private javax.swing.JTextField totalTf;
    private javax.swing.JComboBox<String> typeCb;
    // End of variables declaration//GEN-END:variables
}
