/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shoemanagementsystem;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author mnawa
 */
public class forgetPass extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement st = null;
    ResultSet rs = null;

    int xMouse;
    int yMouse;

    /**
     * Creates new form forgetPass
     */
    public forgetPass() {
        initComponents();
        disableComponents();

        newPassEyeBtn.setVisible(false);
        confirmPassEyeBtn.setVisible(false);
    }

    void disableComponents() {
        codeLbl.setEnabled(false);
        codeTF.setEnabled(false);
        verifyBtn.setEnabled(false);

        passwordPanel.setEnabled(false);

        newPassLbl.setEnabled(false);
        newPassTf.setEnabled(false);

        confirmPassLbl.setEnabled(false);
        confirmPassTf.setEnabled(false);

        doneBtn.setEnabled(false);

    }

    void enableComponents() {

        passwordPanel.setEnabled(true);

        newPassLbl.setEnabled(true);
        newPassTf.setEnabled(true);

        confirmPassLbl.setEnabled(true);
        confirmPassTf.setEnabled(true);

        doneBtn.setEnabled(true);

    }
    String existed_email;

    public void getEmail(int id) {
        try {

            conn = DBConnection.getConnection();
            st = conn.prepareStatement("select o_email from owner_signup where id=?");
            st.setInt(1, id);

            rs = st.executeQuery();
            if (rs.next()) {
                existed_email = rs.getString("o_email");
                emailTF.setText(existed_email);
            }

        } catch (SQLException ex) {
            Logger.getLogger(forgetPass.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this number. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        emailPanel = new javax.swing.JPanel();
        codeTF = new javax.swing.JTextField();
        sendBtn = new javax.swing.JButton();
        codeLbl = new javax.swing.JLabel();
        mailLbl = new javax.swing.JLabel();
        emailTF = new javax.swing.JTextField();
        verifyBtn = new javax.swing.JButton();
        passwordPanel = new javax.swing.JPanel();
        newPassLbl = new javax.swing.JLabel();
        doneBtn = new javax.swing.JButton();
        confirmPassLbl = new javax.swing.JLabel();
        newPassTf = new javax.swing.JPasswordField();
        confirmPassTf = new javax.swing.JPasswordField();
        newPassEyeBtn = new javax.swing.JButton();
        confirmPassEyeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(18, 18, 18));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reset Password");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("X");
        jLabel4.setToolTipText("Close");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        emailPanel.setBackground(new java.awt.Color(18, 18, 18));
        emailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Email Verification", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.white));
        emailPanel.setForeground(new java.awt.Color(255, 255, 255));

        codeTF.setBackground(new java.awt.Color(18, 18, 18));
        codeTF.setForeground(new java.awt.Color(255, 255, 255));
        codeTF.setCaretColor(new java.awt.Color(255, 255, 255));
        codeTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codeTFKeyPressed(evt);
            }
        });

        sendBtn.setBackground(new java.awt.Color(187, 134, 252));
        sendBtn.setText("Send code");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });
        sendBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sendBtnKeyPressed(evt);
            }
        });

        codeLbl.setBackground(new java.awt.Color(255, 255, 255));
        codeLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        codeLbl.setForeground(new java.awt.Color(255, 255, 255));
        codeLbl.setText("Enter received code");

        mailLbl.setBackground(new java.awt.Color(255, 255, 255));
        mailLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        mailLbl.setForeground(new java.awt.Color(255, 255, 255));
        mailLbl.setText("Enter your email");

        emailTF.setBackground(new java.awt.Color(18, 18, 18));
        emailTF.setForeground(new java.awt.Color(255, 255, 255));
        emailTF.setCaretColor(new java.awt.Color(255, 255, 255));
        emailTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailTFKeyPressed(evt);
            }
        });

        verifyBtn.setBackground(new java.awt.Color(187, 134, 252));
        verifyBtn.setText("Verify code");
        verifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyBtnActionPerformed(evt);
            }
        });
        verifyBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                verifyBtnKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout emailPanelLayout = new javax.swing.GroupLayout(emailPanel);
        emailPanel.setLayout(emailPanelLayout);
        emailPanelLayout.setHorizontalGroup(
            emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, emailPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(codeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendBtn)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verifyBtn))
                .addGap(96, 96, 96))
            .addGroup(emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(emailPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(mailLbl)
                        .addComponent(codeLbl))
                    .addContainerGap(319, Short.MAX_VALUE)))
        );
        emailPanelLayout.setVerticalGroup(
            emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, emailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(codeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verifyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(emailPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(mailLbl)
                    .addGap(76, 76, 76)
                    .addComponent(codeLbl)
                    .addContainerGap(54, Short.MAX_VALUE)))
        );

        passwordPanel.setBackground(new java.awt.Color(18, 18, 18));
        passwordPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password Verification", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.white));
        passwordPanel.setForeground(new java.awt.Color(255, 255, 255));

        newPassLbl.setBackground(new java.awt.Color(255, 255, 255));
        newPassLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        newPassLbl.setForeground(new java.awt.Color(255, 255, 255));
        newPassLbl.setText("Enter new password");

        doneBtn.setBackground(new java.awt.Color(187, 134, 252));
        doneBtn.setText("Done");
        doneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneBtnActionPerformed(evt);
            }
        });
        doneBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                doneBtnKeyPressed(evt);
            }
        });

        confirmPassLbl.setBackground(new java.awt.Color(255, 255, 255));
        confirmPassLbl.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        confirmPassLbl.setForeground(new java.awt.Color(255, 255, 255));
        confirmPassLbl.setText("Confirm new password");

        newPassTf.setBackground(new java.awt.Color(18, 18, 18));
        newPassTf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        newPassTf.setForeground(new java.awt.Color(255, 255, 255));
        newPassTf.setCaretColor(new java.awt.Color(255, 255, 255));
        newPassTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newPassTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newPassTfFocusLost(evt);
            }
        });
        newPassTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPassTfKeyPressed(evt);
            }
        });

        confirmPassTf.setBackground(new java.awt.Color(18, 18, 18));
        confirmPassTf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirmPassTf.setForeground(new java.awt.Color(255, 255, 255));
        confirmPassTf.setCaretColor(new java.awt.Color(255, 255, 255));
        confirmPassTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                confirmPassTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                confirmPassTfFocusLost(evt);
            }
        });

        newPassEyeBtn.setBackground(new java.awt.Color(18, 18, 18));
        newPassEyeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_eye_20px.png"))); // NOI18N
        newPassEyeBtn.setToolTipText("show/hide password");
        newPassEyeBtn.setBorder(null);
        newPassEyeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newPassEyeBtnMouseClicked(evt);
            }
        });

        confirmPassEyeBtn.setBackground(new java.awt.Color(18, 18, 18));
        confirmPassEyeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_eye_20px.png"))); // NOI18N
        confirmPassEyeBtn.setToolTipText("show/hide password");
        confirmPassEyeBtn.setBorder(null);
        confirmPassEyeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmPassEyeBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout passwordPanelLayout = new javax.swing.GroupLayout(passwordPanel);
        passwordPanel.setLayout(passwordPanelLayout);
        passwordPanelLayout.setHorizontalGroup(
            passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordPanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmPassLbl)
                    .addComponent(newPassLbl))
                .addGap(48, 48, 48)
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(passwordPanelLayout.createSequentialGroup()
                        .addComponent(newPassTf, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newPassEyeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(passwordPanelLayout.createSequentialGroup()
                        .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(doneBtn)
                            .addComponent(confirmPassTf, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmPassEyeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        passwordPanelLayout.setVerticalGroup(
            passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(passwordPanelLayout.createSequentialGroup()
                        .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(newPassLbl)
                                .addComponent(newPassTf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(newPassEyeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(passwordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(confirmPassLbl)
                            .addComponent(confirmPassTf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(confirmPassEyeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(emailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(emailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // code verification method ///
    void verifyCode() {
        if (codeTF.getText().equals(code)) {
            JOptionPane.showMessageDialog(this, "Code matched");
            codeLbl.setEnabled(false);
            codeTF.setEnabled(false);
            verifyBtn.setEnabled(false);
            enableComponents();
        } else {
            JOptionPane.showMessageDialog(this, "Verification code doesn't match", "Wrong code", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void verifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyBtnActionPerformed

        verifyCode();
    }//GEN-LAST:event_verifyBtnActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling number here:
        this.dispose();
        new LoginPage().setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked
    Random random; /// it will generate random verification code
    String code;   /// it will hold verification code

    /// email sending method ////
    void sendMail() {
        /* 
        This part of the code will check if the entered email is in the database or not
        if user enter non existing email it will give error
         */
        try {

            conn = DBConnection.getConnection();
            st = conn.prepareStatement("select o_email from owner_signup where o_email=?");
            st.setString(1, emailTF.getText());

            rs = st.executeQuery();
            if (rs.next()) {
                existed_email = rs.getString("o_email");
            }

        } catch (SQLException ex) {
            Logger.getLogger(forgetPass.class.getName()).log(Level.SEVERE, null, ex);
        }

        // all these if statements are for different type of worst cases that may occur while entering data
        if (emailTF.getText().isEmpty()) {

            JOptionPane.showMessageDialog(this, "Please enter email..", "Email not inserted", JOptionPane.ERROR_MESSAGE);
        } else if (!emailTF.getText().contains("@gmail.com")) {
            JOptionPane.showMessageDialog(this, "Please enter a valid email example: abc@gmail.com", "Invalid Email", JOptionPane.ERROR_MESSAGE);
        } else if (!emailTF.getText().equals(existed_email)) {
            JOptionPane.showMessageDialog(this, "No such email found, Enter carefully", "Invalid Email", JOptionPane.ERROR_MESSAGE);

        } else {
            mailLbl.setEnabled(false);
            emailTF.setEnabled(false);
            sendBtn.setEnabled(false);

            codeLbl.setEnabled(true);
            codeTF.setEnabled(true);
            verifyBtn.setEnabled(true);
            // this piece of code will generate random 6-digit verification code

            random = new Random();
            int number = random.nextInt(999999);
            code = String.format("%06d", number);

            // Recipient's email ID needs to be mentioned.
            String to = emailTF.getText();

            // Sender's email ID needs to be mentioned
            String from = "syyedmnawazshah@gmail.com";

            // Assuming you are sending email from through gmails smtp
            String host = "smtp.gmail.com";

            // Get system properties
            Properties properties = System.getProperties();

            // Setup mail server
            properties.put("mail.smtp.host", host);
            properties.put("mail.smtp.port", "465");
            properties.put("mail.smtp.ssl.enable", "true");
            properties.put("mail.smtp.auth", "true");

            // Get the Session object.// and pass username and password
            Session session = Session.getInstance(properties, new javax.mail.Authenticator() {

                protected PasswordAuthentication getPasswordAuthentication() {

                    return new PasswordAuthentication("syyedmnawazshah@gmail.com", "ilovepakistan");

                }

            });

            // Used to debug SMTP issues
            session.setDebug(true);

            try {
                // Create a default MimeMessage object.
                MimeMessage message = new MimeMessage(session);

                // Set From: header field of the header.
                message.setFrom(new InternetAddress(from));

                // Set To: header field of the header.
                message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

                // Set Subject: header field
                message.setSubject("Verification");

                // Now set the actual message
                message.setText("Your reset password verification code is " + code);
                JOptionPane.showMessageDialog(this, "sending verification code, It may take time ...", "Sending", JOptionPane.PLAIN_MESSAGE);

                // Send message
                Transport.send(message);
                JOptionPane.showMessageDialog(this, "Code sent successfully ...", "Sent", JOptionPane.PLAIN_MESSAGE);

            } catch (MessagingException mex) {
                System.out.println(mex);
            }
        }
    }
    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed

        sendMail();
    }//GEN-LAST:event_sendBtnActionPerformed

    /// confirm new password method ///
    void confirmPassword() {
        if (String.valueOf(newPassTf.getPassword()).isEmpty() || String.valueOf(confirmPassTf.getPassword()).isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter data in both fields", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (String.valueOf(newPassTf.getPassword()).equals(String.valueOf(confirmPassTf.getPassword()))) {

            try {
                String sql = "update owner_signup set o_password='" + confirmPassTf.getText() + "' where o_email='" + emailTF.getText() + "'";
                Statement st = conn.createStatement();
                st.executeUpdate(sql);

                JOptionPane.showMessageDialog(this, "Passwords Changed Successfuly", "success", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                new LoginPage().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(forgetPass.class.getName()).log(Level.SEVERE, null, ex);

            }
        } else {
            JOptionPane.showMessageDialog(this, "Passwords not matched", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }
    private void doneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneBtnActionPerformed
        confirmPassword();

    }//GEN-LAST:event_doneBtnActionPerformed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void emailTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTFKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sendMail();
        }
    }//GEN-LAST:event_emailTFKeyPressed

    private void codeTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeTFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verifyCode();
        }
    }//GEN-LAST:event_codeTFKeyPressed

    ImageIcon image1 = new ImageIcon("E:\\ShoeManagementSystem\\src\\Images\\icons8_eye_20px.png");
    ImageIcon image2 = new ImageIcon("E:\\ShoeManagementSystem\\src\\Images\\icons8_invisible_20px_1.png");

    int counter = 1;

    private void newPassEyeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPassEyeBtnMouseClicked

        if (counter == 1) {
            newPassTf.setEchoChar((char) 0);
            newPassEyeBtn.setIcon(image2);
            counter--;
        } else {
            newPassTf.setEchoChar('\u25cf');
            newPassEyeBtn.setIcon(image1);
            counter = 1;
        }

    }//GEN-LAST:event_newPassEyeBtnMouseClicked

    private void confirmPassEyeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPassEyeBtnMouseClicked
        if (counter == 1) {
            confirmPassTf.setEchoChar((char) 0);
            confirmPassEyeBtn.setIcon(image2);
            counter--;
        } else {
            confirmPassTf.setEchoChar('\u25cf');
            confirmPassEyeBtn.setIcon(image1);
            counter = 1;
        }
    }//GEN-LAST:event_confirmPassEyeBtnMouseClicked

    private void sendBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sendBtnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sendMail();
        }
    }//GEN-LAST:event_sendBtnKeyPressed

    private void verifyBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_verifyBtnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verifyCode();
        }
    }//GEN-LAST:event_verifyBtnKeyPressed

    private void doneBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doneBtnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            confirmPassword();
        }
    }//GEN-LAST:event_doneBtnKeyPressed

    private void newPassTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPassTfKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            confirmPassTf.grabFocus();
        }
    }//GEN-LAST:event_newPassTfKeyPressed

    private void newPassTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPassTfFocusGained
        newPassEyeBtn.setVisible(true);

    }//GEN-LAST:event_newPassTfFocusGained

    private void newPassTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPassTfFocusLost
        newPassEyeBtn.setVisible(false);

    }//GEN-LAST:event_newPassTfFocusLost

    private void confirmPassTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPassTfFocusGained

        confirmPassEyeBtn.setVisible(true);
    }//GEN-LAST:event_confirmPassTfFocusGained

    private void confirmPassTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPassTfFocusLost
        
        confirmPassEyeBtn.setVisible(false);
    }//GEN-LAST:event_confirmPassTfFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting number (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Darcula".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(forgetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(forgetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(forgetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(forgetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new forgetPass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel codeLbl;
    private javax.swing.JTextField codeTF;
    private javax.swing.JButton confirmPassEyeBtn;
    private javax.swing.JLabel confirmPassLbl;
    private javax.swing.JPasswordField confirmPassTf;
    private javax.swing.JButton doneBtn;
    private javax.swing.JPanel emailPanel;
    private javax.swing.JTextField emailTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel mailLbl;
    private javax.swing.JButton newPassEyeBtn;
    private javax.swing.JLabel newPassLbl;
    private javax.swing.JPasswordField newPassTf;
    private javax.swing.JPanel passwordPanel;
    private javax.swing.JButton sendBtn;
    private javax.swing.JButton verifyBtn;
    // End of variables declaration//GEN-END:variables
}
